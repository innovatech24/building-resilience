@model IEnumerable<Resilience.Models.Exercise>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @{
        ViewBag.Title = "View tasks - Building Resilience";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <!-- Font awesome -->
    <link href="~/Content/font-awesome.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link href="~/Content/bootstrap.css" rel="stylesheet">
    <!-- Slick slider -->
    <link rel="stylesheet" type="text/css" href="~/Content/slick.css">
    <!-- Fancybox slider -->
    <link rel="stylesheet" href="~/Content/jquery.fancybox.css" type="text/css" media="screen" />
    <!-- Theme color -->
    <link id="switcher" href="~/Content/default-theme.css" rel="stylesheet">

    <!-- Main style sheet -->
    <link href="~/Content/style.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/Content/exercise-index.css">

    <!-- Google Fonts -->
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,400italic,300,300italic,500,700' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family==Roboto:400,500,700,300,100' rel='stylesheet' type='text/css'>
</head>
<body>
    <div class="table-page">
        <div class="table-title">
            <hr />
            <hr />
            <hr />
            <h3>@Model.First().Goal.User.FirstName @Model.First().Goal.User.LastName - @Model.First().Goal.GoalName</h3>
        </div>
        <div id="completionTask" class="alert" hidden></div>
        <div class="view-tasks">
            <h2>View Tasks</h2>
            <div style="overflow-x:auto;">
                <table class="table-fill">
                    <thead>
                        <tr>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.TaskName)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.TaskDescription)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.DueDate)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.CompletionDate)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.MenteeComments)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.MenteeRating)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.MentorFeedback)
                            </th>
                            <th class="text-left"></th>
                        </tr>
                    </thead>
                    <tbody class="table-hover">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="text-left">
                                    <strong>@Html.DisplayFor(modelItem => item.TaskName)</strong>

                            </td>
                            <td class="text-left">
                                @Html.DisplayFor(modelItem => item.TaskDescription)
                            </td>
                            <td class="text-left">
                                @item.DueDate.ToShortDateString()
                            </td>                            
                            @if (this.User.IsInRole("Mentor"))
                            {
                                if (DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        <i>
                                            Your mentee hasn't completed the task yet.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @item.CompletionDate.ToShortDateString()
                                    </td>
                                }
                                if (item.MenteeComments == null)
                                {
                                    <td class="text-left">
                                        <i>
                                            Your mentee hasn't left any comments yet. They would typically do this once they complete the goal.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @Html.DisplayFor(modelItem => item.MenteeComments)
                                    </td>
                                }
                                if (item.MenteeRating == null)
                                {
                                    <td class="text-left">
                                        <i>
                                            Your mentee hasn't told us how they felt with this goal. They would typically do this once they complete the goal.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-center">
                                        <div class="ratingDisabled" iid=@item.Id rate=@item.MenteeRating></div>
                                    </td>
                                }
                                if (item.MentorFeedback == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        <i>
                                            The goal isn't completed yet. You can give feedback once the goal is completed.
                                        </i>
                                    </td>
                                }
                                else if (item.MentorFeedback == null)
                                {
                                    <td class="text-left">
                                        @Html.ActionLink("Provide Feedback", "Feedback", "Exercises", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @Html.DisplayFor(modelItem => item.MentorFeedback)
                                    </td>
                                }
                                if (DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        @Html.ActionLink("Propose change", "Edit", "Exercises", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                    </td>
                                }
                            }
                            else
                            {
                                if (DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        @Html.ActionLink("Mark as completed", "EditCompletion", "Exercises", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @item.CompletionDate.ToShortDateString()
                                    </td>
                                }
                                if (item.MenteeComments == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        <i>
                                            You haven't completed the task. You can provide comments once the task is completed.
                                        </i>
                                    </td>
                                }
                                else if (item.MenteeComments == null)
                                {
                                    <td class="text-left">
                                        <text>
                                            @Html.ActionLink("Provide comments", "Comments", "Exercises", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                        </text>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @Html.DisplayFor(modelItem => item.MenteeComments)
                                    </td>
                                }
                                if (item.MenteeRating == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        <i>
                                            You haven't completed the task. You can provide a rating once the task is completed.
                                        </i>
                                    </td>
                                }
                                else if (item.MenteeRating == null)
                                {
                                    <td class="text-center">
                                        <div class="ratingEnabled" iid=@item.Id rate=0></div>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        <div class="ratingDisabled" iid=@item.Id rate=@item.MenteeRating></div>
                                    </td>
                                }
                                if (item.MentorFeedback == null)
                                {
                                    <td class="text-left">
                                        <i>
                                            Your mentor hasn't given feedback yet. They will typically do this once the task is completed.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @Html.DisplayFor(modelItem => item.MentorFeedback)
                                    </td>
                                }
                                if (DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        @Html.ActionLink("Edit task", "Edit", "Exercises", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>

            </div>
        </div>
    </div>

    <!-- jQuery library -->
    <script src="~/Scripts/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="~/Scripts/bootstrap.js"></script>
    <!-- Slick slider -->
    <script type="text/javascript" src="~/Scripts/slick.js"></script>
    <!-- Counter -->
    <script type="text/javascript" src="~/Scripts/waypoints.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.counterup.js"></script>
    <!-- Mixit slider -->
    <script type="text/javascript" src="~/Scripts/jquery.mixitup.js"></script>
    <!-- Add fancyBox -->
    <script type="text/javascript" src="~/Scripts/jquery.fancybox.pack.js"></script>
    <script src="~/Scripts/Dashboard.js"></script>
    <!-- Emoticon rating-->
    <script type="text/javascript" src="~/Scripts/emoticon_rating.js"></script>
    <!-- Custom js -->
    <script src="~/Scripts/custom.js"></script>
    <script src="~/Scripts/ExercisesIndex.js"></script>    
</body>
</html>