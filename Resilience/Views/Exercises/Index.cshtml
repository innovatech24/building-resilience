@model IEnumerable<Resilience.Models.Exercise>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @{
        ViewBag.Title = "View tasks - Building Resilience";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <!-- Font awesome -->
    <link href="~/Content/font-awesome.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link href="~/Content/bootstrap.css" rel="stylesheet">
    <!-- Slick slider -->
    <link rel="stylesheet" type="text/css" href="~/Content/slick.css">
    <!-- Fancybox slider -->
    <link rel="stylesheet" href="~/Content/jquery.fancybox.css" type="text/css" media="screen" />
    <!-- Theme color -->
    <link id="switcher" href="~/Content/default-theme.css" rel="stylesheet">

    <!-- Main style sheet -->
    <link href="~/Content/style.css" rel="stylesheet">


    <!-- Google Fonts -->
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,400italic,300,300italic,500,700' rel='stylesheet' type='text/css'>
    <style>
        html, body {
            height: 100%;
            width: 100%;
        }

        .view-tasks {
            min-height: 100%;
            height: auto;
            background: url('../../Images/atmosphere-background-bright-19670.jpg') center;
            background-repeat: repeat-y;
        }
    </style>
</head>
<body>
    <div class="view-tasks">
        <h2>View Tasks</h2>
        <div style="overflow-x:auto;">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.TaskName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TaskDescription)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DueDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CompletionDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MenteeComments)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MenteeRating)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MentorFeedback)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TaskDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                        @if (DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                        {
                            <td>
                                @Html.ActionLink("Mark as completed", "EditCompletion", "Exercises", new { id = item.Id }, new { htmlAttributes = new { @class = "btn btn-default" } })
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.CompletionDate)
                            </td>
                        }
                        @if (this.User.IsInRole("Mentor"))
                        {
                            if (item.MenteeComments == null)
                            {
                                <td>
                                    <text>
                                        Your mentee hasn't left any comments yet. They would typically do this once they complete the goal.
                                    </text>
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.MenteeComments)
                                </td>
                            }
                            if (item.MenteeRating == null)
                            {
                                <td>
                                    <text>
                                        Your mentee hasn't told us how they felt with this goal. They would typically do this once they complete the goal.
                                    </text>
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.MenteeRating)
                                </td>
                            }
                            if (item.MentorFeedback == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                            {
                                <td>
                                    <text>
                                        The goal isn't completed yet. You can give feedback once the goal is completed.
                                    </text>
                                </td>
                            }
                            else if (item.MentorFeedback == null)
                            {
                                <td>
                                    @Html.ActionLink("Provide Feedback", "Feedback", "Exercises", new { id = item.Id }, null)
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.MentorFeedback)
                                </td>
                            }                            
                            <td>
                                @Html.ActionLink("Propose change", "Edit", "Exercises", new { id = item.Id }, null)
                            </td>
                        }
                        else
                        {
                            if (item.MenteeComments == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                            {
                                <td>
                                    <text>
                                        You haven't completed the task. You can provide comments once the task is completed.
                                    </text>
                                </td>
                            }
                            else if (item.MenteeComments == null)
                            {
                                <td>
                                    <text>
                                        @Html.ActionLink("Provide comments", "Comments", "Exercises", new { id = item.Id }, null)
                                    </text>
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.MenteeComments)
                                </td>
                            }
                            if (item.MenteeRating == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                            {
                                <td>
                                    <text>
                                        You haven't completed the task. You can provide a rating once the task is completed.
                                    </text>
                                </td>
                            }
                            else if (item.MenteeRating == null)
                            {
                                <td></td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.MenteeRating)
                                </td>
                            }         
                            if (item.MentorFeedback == null)
                            {
                                <td>
                                    <text>
                                        Your mentor hasn't given feedback yet. They will typically do this once the task is completed.
                                    </text>
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.MentorFeedback)
                                </td>
                            }
                            <td>
                                @Html.ActionLink("Edit task", "Edit", "Exercises", new { id = item.Id }, null)
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
    </div>

    <!-- jQuery library -->
    <script src="~/Scripts/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="~/Scripts/bootstrap.js"></script>
    <!-- Slick slider -->
    <script type="text/javascript" src="~/Scripts/slick.js"></script>
    <!-- Counter -->
    <script type="text/javascript" src="~/Scripts/waypoints.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.counterup.js"></script>
    <!-- Mixit slider -->
    <script type="text/javascript" src="~/Scripts/jquery.mixitup.js"></script>
    <!-- Add fancyBox -->
    <script type="text/javascript" src="~/Scripts/jquery.fancybox.pack.js"></script>
    <script src="~/Scripts/Dashboard.js"></script>
    <!-- Custom js -->
    <script src="~/Scripts/custom.js"></script>
</body>
</html>