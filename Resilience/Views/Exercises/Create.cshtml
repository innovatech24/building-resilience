@model Resilience.Models.Exercise

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @{
        ViewBag.title = "Create Tasks for your Goals - Building Resilience";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <!-- Font awesome -->
    <link href="~/Content/font-awesome.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link href="~/Content/bootstrap.css" rel="stylesheet">
    <!-- Slick slider -->
    <link rel="stylesheet" type="text/css" href="~/Content/slick.css">
    <!-- Fancybox slider -->
    <link rel="stylesheet" href="~/Content/jquery.fancybox.css" type="text/css" media="screen" />
    <!-- Theme color -->
    <link id="switcher" href="~/Content/default-theme.css" rel="stylesheet">
    <!-- datepicker -->
    <link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />

    <!-- Main style sheet -->
    <link href="~/Content/style.css" rel="stylesheet">

    <!-- Google Fonts -->
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,400italic,300,300italic,500,700' rel='stylesheet' type='text/css'>
    <style>
        html, body {
            height: 100%;
            width: 100%;
        }

        .col-md-12 {
            min-height:80%;
            height: auto;
            background: url('../../Images/atmosphere-background-bright-19670.jpg') center;
            background-repeat: repeat-y;
        }
    </style>
</head>
<body>
    <div class="col-md-12">
        <h2>Create tasks for your goal - @ViewBag.goalName</h2>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.TaskName)*@
                        Task name
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.TaskDescription)*@
                        Description
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.DueDate)*@
                        Due date
                    </th>
                </tr>
            </thead>

            <tbody>
                <tr>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <td>
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                        <td>
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control", rows = "3" } })   
                                    @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                        <td>
                            <div class="form-group">
                                <div class="col-md-10">
                                    <div id="sandbox">
                                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @onchange = "dateChange(this)" } })                                     
                                    </div>
                                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                    }
                </tr>
            </tbody>

            <tfoot>
                <tr>
                    <td>
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-10">
                                <input type="button" value="Add a task" class="btnAdd btn btn-default" />
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnSubmit" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
        @section Scripts{

            <!-- jQuery library -->
            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/jqueryval")
            <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
            <script>
                $('#sandbox input').datepicker({
                    autoclose: true,
                    todayHighlight: true,
                    format: "dd-M-yyyy",
                    startDate: "today"
                });
            </script>
            <script>
            $(".btnAdd").click(function () {
                $('#sandbox').datepicker('destroy');
                var td1 = '<td><div class="form-group"><div class="col-md-10">@Html.EditorFor(modelItem => modelItem.TaskName, new { htmlAttributes = new { @class = "form-control" } })</div></div></td>';
                var td2 = '<td><div class="form-group"><div class="col-md-10"><textarea class="form-control text-box multi-line" id="TaskDescription" name="TaskDescription" rows="3"></textarea></div></div></td>';
                var td3 = '<td><div class="form-group"><div class="col-md-10"><div id="sandbox">@Html.EditorFor(modelItem => modelItem.DueDate, new { htmlAttributes = new { @class = "form-control", @onchange= "dateChange(this)" } })</div></div></div></td>';
                $("tbody").append('<tr>' + td1 + td2 + td3 + '</tr>');
                $('#sandbox input').datepicker({
                    autoclose: true,
                    todayHighlight: true,
                    format: "dd-M-yyyy"
                });
            });

            function getAllData() {
                var data = [];
                $('tbody tr').each(function () {
                    var TaskName = $(this).find('#TaskName').val();
                    var TaskDescription = $(this).find('#TaskDescription').val();
                    var DueDate = $(this).find('#DueDate').val();
                    var GoalsId = '@ViewBag.goalId';
                    var MentorId = '@ViewBag.mentorId';

                    var alldata = {
                        'TaskName': TaskName,
                        'TaskDescription': TaskDescription,
                        'DueDate': DueDate,
                        'GoalsId': GoalsId,
                        'MentorId': MentorId,
                    }
                    //console.log(data);
                    data.push(alldata);
                });
                return data;
            }

            function dateChange(element) {
                var goalDate = new Date("@ViewBag.DueDate");
                var taskDate = new Date(element.value);

                if (taskDate > goalDate) {
                    alert("Task date can't be after goal date");
                    element.value = "";
                    element.focus();
                };
            };

            $('#btnSubmit').click(function () {
                var data = JSON.stringify(getAllData());
                //console.log(data);
                $.ajax({
                    url: '/Exercises/Create',
                    type: 'POST',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({ 'data': data }),
                    success: function () {
                        window.location.replace("/Options/Mentee");
                    },
                    error: function () {
                        window.location.replace("Error/NotFound");
                    }
                });
            });
            </script>
        }

</body>
</html>