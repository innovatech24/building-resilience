@model IEnumerable<Resilience.Models.Goals>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @{
        ViewBag.Title = "Goals";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <!-- Font awesome -->
    <link href="~/Content/font-awesome.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link href="~/Content/bootstrap.css" rel="stylesheet">

    <!-- Main style sheet -->
    <link href="~/Content/style.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/Content/goals-mentorview.css">
    <!-- Google Fonts -->
    <link href=~/Content/fontMontserrat.css rel='stylesheet' type='text/css'>
    <link href=~/Content/fontRoboto.css rel='stylesheet' type='text/css'>
</head>
<body>
    <div class="table-page">
        <div class="table-title">
            <hr />
            <hr />
            <hr />
            <h3>@Model.First().User.FirstName @Model.First().User.LastName - Goals</h3>
        </div>
            <div style="overflow-x:auto;">
                <table class="table-fill">
                    <thead>
                        <tr>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.GoalName)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.GoalDescription)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.DueDate)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.CompletionDate)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.MenteeComments)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.MenteeRating)
                            </th>
                            <th class="text-left">
                                @Html.DisplayNameFor(model => model.MentorFeedback)
                            </th>
                            <th class="text-left"></th>
                        </tr>
                    </thead>
                    <tbody class="table-hover">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="text-left">
                                    <strong>@Html.DisplayFor(modelItem => item.GoalName)</strong>
                                </td>
                                <td class="text-left">
                                    @Html.DisplayFor(modelItem => item.GoalDescription)
                                </td>
                                <td class="text-left">
                                    @item.DueDate.ToShortDateString()
                                </td>
                                @if (DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        <i>
                                            This task hasn't been completed yet.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @item.CompletionDate.ToShortDateString()
                                    </td>
                                }
                                @if (item.MenteeComments == null)
                                {
                                    <td class="text-left">
                                        <i>
                                            Your mentee hasn't left any comments yet. They would typically do this once they complete the goal.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @Html.DisplayFor(modelItem => item.MenteeComments)
                                    </td>
                                }
                                @if (item.MenteeRating == null)
                                {
                                    <td class="text-left">
                                        <i>
                                            Your mentee hasn't told us how they felt with this goal. They would typically do this once they complete the goal.
                                        </i>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-center">
                                        <div class="ratingDisabled" iid=@item.Id rate=@item.MenteeRating></div>
                                    </td>
                                }
                                @if (item.MentorFeedback == null && DateTime.Compare(item.CompletionDate, new DateTime(1990, 02, 10)) == 0)
                                {
                                    <td class="text-left">
                                        <i>
                                            The goal isn't completed yet. You can give feedback once the goal is completed.
                                        </i>
                                    </td>
                                }
                                else if (item.MentorFeedback == null)
                                {
                                    <td class="text-left">
                                        @Html.ActionLink("Provide Feedback", "Feedback", "Goals", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                    </td>
                                }
                                else
                                {
                                    <td class="text-left">
                                        @Html.DisplayFor(modelItem => item.MentorFeedback)
                                    </td>
                                }
                                <td class="text-left">
                                    @Html.ActionLink("View tasks", "Index", "Exercises", new { id = item.Id }, new { @class = "btn btn-default", @style = "color:black" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        
    </div>
        <!-- jQuery library -->
        <script src="~/Scripts/jquery.min.js"></script>
        <!-- Include all compiled plugins (below), or include individual files as needed -->
        <script src="~/Scripts/bootstrap.js"></script>
        <script src="~/Scripts/Dashboard.js"></script>
        <!-- Emoticon rating-->
        <script type="text/javascript" src="~/Scripts/emoticon_rating.js"></script>
        <!-- Custom js -->
        <script src="~/Scripts/GoalsMentorView.js"></script>
        <script src="~/Scripts/custom.js"></script>
</body>
</html>
